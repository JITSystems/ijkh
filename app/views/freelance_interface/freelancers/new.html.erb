<link rel="stylesheet" href="/stylesheets/multiselect.css">


<p>Заполните анкету и загрузите своё фото. <a href="#"> Информация о размещении и использовании. </a> </p>

<br>
<div id="new_freelancer_form">
	<%= render 'form' %>
</div>

<!-- http://jsfiddle.net/Kulgar/57F67/ -->

<!-- <div style="_height: px; width: 47%;background-color: #FFF;border: 1px solid #FFF; text-align: left;">

	<% @tags_array.each do |tag| %>
		<a href="#" style="font-size:<%= 15 + Random.rand(5) %>px;text-decoration:none; margin-left: 10px; border-bottom: 1px dotted; color: #000;"> <%= tag[0] %>  </a>
	<% end %>

</div>  -->

<script src="/javascripts/jquery.multiselect.js"></script>
<script src="/javascripts/jquery.quicksearch.js"></script>


<script>

	// multi-select plugin
	var $tags_select = $('#freelance_interface_freelancer_tags');

	$tags_select.multiSelect({
	  selectableHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Поиск категории...' >",
	  // selectionHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Поиск...' >",
	  selectionHeader: "<div  class=\"search-input\"> Выбранные категории: </div>",
	  afterInit: function(ms){
	    var that = this,
	        $selectableSearch = that.$selectableUl.prev(),
	        $selectionSearch = that.$selectionUl.prev(),
	        selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
	        selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

	    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
	    .on('keydown', function(e){
	      if (e.which === 40){
	        that.$selectableUl.focus();
	        return false;
	      }
	    });

	    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
	    .on('keydown', function(e){
	      if (e.which == 40){
	        that.$selectionUl.focus();
	        return false;
	      }
	    });
	  },
  
	  afterSelect: function(values){
	    this.qs1.cache();
	    this.qs2.cache();

	    changeCost(10);
	    // alert("Select value: "+values);
	  },
	  afterDeselect: function(){
	    this.qs1.cache();
	    this.qs2.cache();

		changeCost(-10);
	    // alert("Deselect value: "+values);
	  }
	});


	// COST by month
	var $fi_total_cost_wrap = $('p.fi_total_cost');
	var $fi_cost_by_month = $('p.fi_cost_by_month > span');
	var $fi_total_cost = $('p.fi_total_cost > span:first-child');
	var $number_of_month = $('p.fi_total_cost > span:last-child');

	var $amount_total = $('input#amount_total')

	var $radio_number_of_month = $('input[name="freelance_interface_freelancer[number_of_month]"]');

	function changeCost(sum){
		var cost = parseFloat($fi_cost_by_month.html());
		var month = parseFloat($('input[type="radio"]:checked').val());
	    cost += sum; 
	    $fi_cost_by_month.html(cost);
		changeTotalCost(month);
	};

	//TOTAL COST

	$radio_number_of_month.on('change', function(){
		$this = $(this);
		changeTotalCost($this.val());
	});


	function changeTotalCost(month){
		if (month) 
		{
			var n = parseFloat(month);
			var s = parseFloat($fi_cost_by_month.html());
			var cost = s*n;
			$fi_total_cost.html(cost);

			switch(n){
				case 1:
					n += ' месяц';
					break;
				case 6:
					n += ' месяцев';
					break;
				case 12:
					n += ' месяцев';
					break;
				default:
					console.log('');
					break;

			};
			$fi_total_cost_wrap.show();
			$number_of_month.html(n);

			$amount_total.val(cost);

		} else {
			$fi_total_cost_wrap.hide();
		}



	};


	// change total cost if top ten checked
	$('#freelance_interface_freelancer_top_ten_freelancer').on('change', function(){
		if (this.checked == true) {
			changeCost(50);
		} else {
			changeCost(-50);
		};
	});


	// CUSTOM TAGS PART

	$custom_tag_field = $('#custom_tag_field');
	$custom_tag_hidden_field = $('#custom_tag_hidden_field');

	function addCustomTag(custom_tag_field){
		if ( $custom_tag_field.val().trim() != '' )
		{
			changeCost(10);
			$tags_select.multiSelect('addOption', { value: custom_tag_field.val(), text: custom_tag_field.val(), index: 0, nested: 'Новые категории'  });
			$tags_select.multiSelect('refresh');
			$custom_tag_field.val('');
		}
	}

	// unbind custom field default event for calling function by pressing enter
	$custom_tag_field.keypress(function(event) {
	    if (event.keyCode == 13) {
        	addCustomTag($custom_tag_field)
      		return false;
      		// $fi_freelancer_tags = $('#freelance_interface_freelancer_tags');
			// $fi_freelancer_tags.prepend('<option selected value="0">' + this.value  + '</option>');
        }
    });

    $('#add_custom_tag').click( function(){
    	addCustomTag($custom_tag_field);
    });



    // custom submit event

	$form = $('form#new_freelance_interface_freelancer');
    $form.bind('submit', function(){

    	// validation begin

    	if ($('.ms-selected').size() == 0)
    	{
    		message = "Пожалуйста, добавьте хотя бы одну категорию";
    		popUpRender(message);
    		return false;
    	}

    	if (parseFloat($('input[type="radio"]:checked').val()))
    	{
    		console.log('OK');
    	} else {
    		message = "Пожалуйста, выберите период размещени";
    		popUpRender(message);
    		return false;	
    	}

    	// validation end



    	var $custom_tags = $('#custom_tags');
    	var $tags_select_optgroup = $('optgroup[label="Новые категории"] > option');

    	// insertin custom tags into hidden select
    	$tags_select_optgroup.each(
    		function(){
    			$custom_tags.append( '<option selected value="'+ $(this).val() +'""></option>' );
    		});

    	// removing custom tags from original select for decreasing data to submit
    	$tags_select_optgroup.remove();
    	$custom_tag_field.val('');

		$form.unbind('submit').submit();
    	return false;

	});


	// photo preview after choosing from file system

	var $preview = $("p.freelancer_info_picture img");
    $("#freelance_interface_freelancer_picture_url").change(function(event){
       var input = $(event.currentTarget);
       var file = input[0].files[0];
       var reader = new FileReader();
       reader.onload = function(e){
           image_base64 = e.target.result;
           $preview.attr("src", image_base64);
       };
       reader.readAsDataURL(file);
    });


</script>

<!-- 
<div id="wrapper">
	<input id="File1" type="file"/>
</div>

 -->

